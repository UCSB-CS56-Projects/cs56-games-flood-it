<project default="compile">

  <!-- build.xml for FloodIt, S13, CS56
       name: Sophia Mao
       name: Kai Jann

updated by: Chris Luo & Kevin Briggs
  -->

  <property name="projectName" value="FloodIt" />   
  <property name="mainClass" value="FloodItLauncher" />
  <property name="packagePrefix" value="edu.ucsb.cs56.projects.games.flood_it.view" />
  <property environment="env"/> <!-- load the environment variables --> 
  <property name="projectPath" value="cs56/cs56_games_flood_it/javadoc" />
  <property name="webRoot" value="${env.HOME}/public_html" />
  <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}" />
  <property name="jwsDest" value="${webRoot}/${projectPath}/jws" />
  <property name="jwsURL" value="${webBaseURL}/${projectPath}/jws" />
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" /> 
  <property name="javadocURL" value="${webBaseURL}/${projectPath}/javadoc" />
  <path id = "project.class.path">
    <pathelement location = "build" />
    <pathelement location = "lib/junit-4.8.2.jar"/>
  </path>

  <target name="compile" description="compile the program">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" includeantruntime="false" debug="true" debuglevel="lines,vars,source" >
      <classpath refid = "project.class.path" />
    </javac>
  </target>

  <target name="run" depends="compile" description="run the mainClass of this program">
    <echo>
    </echo>
    <java classname="${packagePrefix}.${mainClass}" classpathref="project.class.path" fork="true" />
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />
    <delete dir="download" quiet="true" />
    <delete dir="temp" quiet="true" />   
  </target>

  <target name="javadoc" depends="compile" description="create the javadoc">

    <delete dir="javadoc" quiet="true" />
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >
      <fileset dir="src" includes="**/*.java"/>
      <classpath refid = "project.class.path" />
     <link href="${javadocLink}" /> <!-- for external links to std API classes -->
    </javadoc>
    
    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" />
    
    <!-- copy everything you just made to the javadoc destination, and then make it readable -->
    
    <copy todir="${javadocDest}" >
      <fileset dir="javadoc"/>
    </copy>
    
    <!-- Note: this only does the chmod command on the
	 javadoc subdirectory and its contents.  You MIGHT have to
	 MANUALLY do the chmod on the parent directories.  However,
	 you should only need to do that once. -->
    
    <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />
    <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />
    <echo>Javadoc deployed to ${javadocURL}</echo>

  </target>    

  <target name="test" depends="compile" description="run the JUnit tests">

    <junit haltonerror="no" haltonfailure="no">
  <classpath refid = "project.class.path" />
      
      <batchtest fork="yes">
	<fileset dir="src">
	  <!-- this will pick up every class with a name ending in Test -->
	  <include name="**/*Test.java"/>
	</fileset>
      </batchtest>
      
      <formatter type="plain" usefile="false" /> 
      
    </junit>
  </target>

</project>
